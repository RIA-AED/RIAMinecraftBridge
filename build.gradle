plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'ink.magma'
version = '1.0.1'

repositories {
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url "https://jitpack.io" }
    maven { url "https://repo.codemc.org/repository/maven-public/" }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT"
    compileOnly 'net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT'

    compileOnly 'me.lucko:spark-api:0.1-SNAPSHOT'

    compileOnly 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation "com.sparkjava:spark-core:2.9.4"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.jetbrains:annotations:24.1.0'
    implementation "de.exlll:configlib-yaml:4.5.0"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

tasks.named('shadowJar', ShadowJar) {
    minimize()
}